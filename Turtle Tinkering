# The-ChooChoo-Project
The Magnum Opus of our careers
Keep it clean.

Station code 
-using advanced turtles

Stone bricks and design bricks are placed down to creat station. 
Stations are built at the ends of the railway


Track code
-using advanced turtles
Powered track is placed in straight sections while iron rail is used for turn sections
Track is place according to the protype layout (see Project Page for details)
-reverse codes were written to reposition the turtle

---------------

turtle.forward()
turtle.up()
 
for n = 1, 20 do
turtle.select(1)
turtle.placeDown()
turtle.forward()
 
end
 
turtle.select(4)
turtle.placeDown()
turtle.turnRight()
 
for n = 1, 15 do
turtle.forward()
turtle.select(1)
turtle.placeDown()
 
end
 
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
 
for n = 1, 6 do
turtle.forward()
end
 
turtle.select(5)
turtle.placeDown()
 
for n = 1, 9 do
turtle.forward()
end
 
turtle.select(1)
turtle.placeDown()
turtle.forward()
turtle.turnLeft()
turtle.forward()
turtle.select(6)
turtle.placeDown()
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
 
for n = 1, 3 do
turtle.forward()
end
 
for n = 1, 14 do
turtle.select(1)
turtle.placeDown()
end

-----------------

station code: - Parker

for n = 1, 4 do
 
turtle.select(1)
turtle.up()
turtle.placeDown()
turtle.select(2)
 
for n = 1, 5 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.select(1)
turtle.forward()
turtle.placeDown()
turtle.turnLeft()
turtle.select(2)
 
for n = 1, 5 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.forward()
turtle.select(1)
turtle.placeDown()
turtle.turnLeft()
 
for n = 1, 6 do
 
  turtle.forward()
 
end
 
turtle.turnLeft()
turtle.select(1)
turtle.placeDown()
turtle.select(2)
 
for n = 1, 5 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.forward()
turtle.turnLeft()
 
end
 
turtle.select(4)
turtle.turnLeft()
turtle.forward()
turtle.turnRight()
 
for n = 1, 5 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
 
for n = 1, 5 do
 
  turtle.placeDown()
  turtle.forward()
 
end
 
turtle.turnRight()
turtle.forward()
turtle.turnRight()
 
for n = 1, 5 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
 
for n = 1, 5 do
 
  turtle.placeDown()
  turtle.forward()
 
end
 
turtle.turnRight()
turtle.forward()
turtle.turnRight()
 
for n = 1, 5 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnLeft()
turtle.forward()
turtle.turnLeft()
 
for n = 1, 5 do
 
  turtle.placeDown()
  turtle.forward()
 
end
 
turtle.turnRight()
turtle.forward()
 
for n = 1, 3 do
 
  turtle.down()
 
end
 
turtle.turnRight()
 
for n = 1, 6 do
 
  turtle.placeDown()
  turtle.forward()
 
end
 
turtle.turnLeft()
turtle.turnLeft()
turtle.placeDown()
turtle.forward()
turtle.turnLeft()
 
for n = 1, 6 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.placeDown()
turtle.turnRight()
 
for n = 1, 4 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnRight()
 
for n = 1, 5 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnRight()
 
for n = 1, 3 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnRight()
 
for n = 1, 4 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnRight()
 
for n = 1, 2 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnRight()
 
for n = 1, 3 do
 
  turtle.forward()
  turtle.placeDown()
 
end
 
turtle.turnRight()
turtle.forward()
turtle.turnRight()
 
for n = 1, 2 do
 
  turtle.placeDown()
  turtle.forward()
 
end
 
turtle.placeDown()
turtle.turnRight()
turtle.up()
turtle.forward()
turtle.dig()
turtle.select(3)

*detector rail code #1 - Parker

rednet.open("left") -- Opens the router
 
local sKey = "Station 1" -- Creates String
local sText = "The Train has arrived at Station 1" -- ""
 
 
while true do -- waits forever to receive a message with the sKey
local id, msg = rednet.receive()
os.sleep(.1)
 
if msg ==  sKey then -- Clear screen and prints sText, which then starts the ext program
term.clear()
term.setCursorPos(1,1)
print(sText)
os.sleep(10)
term.clear()
shell.run("station2")
 
end
end

*detector rail code #2 - Parker

rednet.open("left") -- Opens the router
 
local sKey = "Station 2" -- Creates a string
local sText = "The train has arrived at station 2" -- ""
 
while true do -- Waits forever to receive a message with the sKey
local id, msg = rednet.receive()
os.sleep(0.1)
 
if msg == sKey then -- Clears the scren and prints the sText, which then opens station2
term.clear()
term.setCursorPos(1,1)
print(sText)
os.sleep(10)
term.clear()
shell.run("receive")
 
end
end

*Detect Code - Parker

while true do
 
rednet.open("back") -- Opens the router
os.pullEvent("redstone") -- Creates an event called 'redstone'
 
 
 
if redstone.getInput("top", true) then -- If the redstone above is activited then it sends a message
 
  rednet.broadcast("Station 2")
 
end
end
